buildscript {
    dependencies {
        classpath "org.liquibase:liquibase-core:4.31.1"
    }
}

plugins {
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'org.liquibase.gradle' version '3.0.2'
}

version = '0.0.1-SNAPSHOT'
description = 'Identity Management Service'

ext {
    liquibaseVersion = '4.31.1'         
    liquibaseHibernateVersion = '4.31.1'          

    // Liquibase settings
    diffVersion = project.hasProperty('diff.version') ? project.property('diff.version') : '0.1'
    diffChangelogFile = "${projectDir}/src/main/resources/db/changelog/migration/_${diffVersion}_migrate.mariadb.sql"
    changesetAuthor = project.hasProperty('author') ? project.property('author') : 'Zack'
}

dependencies {
    implementation project(':common-lib')
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.37'
    implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0' 

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    implementation "org.liquibase:liquibase-core"

    // --- Dependencies required by the Liquibase Gradle plugin 
    liquibaseRuntime "org.liquibase:liquibase-core:${liquibaseVersion}"
    liquibaseRuntime "org.liquibase.ext:liquibase-hibernate6:${liquibaseHibernateVersion}"
    liquibaseRuntime "org.mariadb.jdbc:mariadb-java-client"
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    liquibaseRuntime "org.apache.commons:commons-lang3:3.14.0"
    liquibaseRuntime sourceSets.main.output

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
}

configurations {
    liquibaseRuntime.extendsFrom runtimeClasspath
}

tasks.withType(org.liquibase.gradle.LiquibaseTask).configureEach {
    dependsOn 'classes'
}

// Liquibase plugin configuration
liquibase {
    activities {
        main {
            changelogFile diffChangelogFile
            propertyFile 'src/main/resources/liquibase.properties'
            author "${changesetAuthor}"
            // dataOutputDirectory 'db/changelog/migration/data'
            // diffTypes 'data'
        }
       
    }
    runList = 'main'
}

task('dbChangeLog') {
  doFirst(){
    liquibase {
      activities {
        main {
          changelogFile "db/changelog/db.changelog-master.yaml"
        }
      }
    }
  }
}

update.dependsOn('dbChangeLog')

bootRun {
    if (!project.hasProperty('springProfilesActive')) {
        systemProperty 'spring.profiles.active', 'dev' // default profile 
    }
}

bootJar {
    archiveBaseName.set('identity-service')
    archiveVersion.set('')
}